#!/bin/bash

# Script to watch CI status for the current branch
# Usage: bin/watch-ci [interval_seconds]

set -e

# Default interval (in seconds)
INTERVAL=${1:-10}

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Clear screen function
clear_screen() {
  printf "\033[2J\033[H"
}

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "‚ùå Not in a git repository"
  exit 1
fi

# Check if gh CLI is available
if ! command -v gh >/dev/null 2>&1; then
  echo "‚ùå GitHub CLI (gh) not found. Install with: brew install gh"
  exit 1
fi

# Check if jq is available
if ! command -v jq >/dev/null 2>&1; then
  echo "‚ùå jq not found. Install with: brew install jq"
  exit 1
fi

# Get current branch
BRANCH=$(git branch --show-current)
if [ -z "$BRANCH" ]; then
  echo "‚ùå Not on a branch (detached HEAD)"
  exit 1
fi

echo -e "üîç Watching CI for branch: ${BLUE}$BRANCH${NC}"
echo "‚è±Ô∏è  Refresh interval: ${INTERVAL}s (press Ctrl+C to stop)"
echo ""

# Function to display CI status
show_ci_status() {
  local timestamp=$(date "+%Y-%m-%d %H:%M:%S")

  clear_screen
  echo -e "üîç CI Status for branch: ${BLUE}$BRANCH${NC}"
  echo "‚è±Ô∏è  Last updated: $timestamp (refreshing every ${INTERVAL}s)"
  echo "üìù Press Ctrl+C to stop watching"
  echo ""

  # Try to get PR checks first
  PR_CHECKS=$(gh pr checks 2>/dev/null) || true
  if [ -n "$PR_CHECKS" ]; then
    echo "üìä CI Check Results:"
    echo "===================="

    # Parse and colorize the output
    while IFS=$'\t' read -r name status duration url; do
      case "$status" in
        "pass")
          echo -e "‚úÖ ${GREEN}$name${NC} - ${duration}"
          ;;
        "fail")
          echo -e "‚ùå ${RED}$name${NC} - ${duration}"
          echo -e "   üìã ${BLUE}$url${NC}"
          ;;
        "pending")
          echo -e "‚è≥ ${YELLOW}$name${NC} - running..."
          ;;
        *)
          echo -e "‚ùì ${YELLOW}$name${NC} - $status"
          ;;
      esac
    done <<< "$PR_CHECKS"

    # Check if all passed
    if echo "$PR_CHECKS" | grep -q "fail"; then
      echo ""
      echo -e "${RED}‚ùå Some checks failed${NC}"
      echo ""
      echo "üìã Failure logs:"
      echo "==============="
      gh run view --log-failed
      return 1
    elif echo "$PR_CHECKS" | grep -q "pending"; then
      echo ""
      echo -e "${YELLOW}‚è≥ Checks still running...${NC}"
      return 0
    else
      echo ""
      echo -e "${GREEN}‚úÖ All checks passed!${NC}"
      echo "üéâ Exiting since all checks have passed"
      return 2
    fi
  else
    # No PR found, check workflow runs for the branch directly
    echo "üìä CI Workflow Status (latest run on $BRANCH):"
    echo "=============================================="

    # Get the latest workflow run for this branch
    RUN_ID=$(gh run list --branch "$BRANCH" --limit 1 --json databaseId --jq '.[0].databaseId' 2>/dev/null)

    if [ -z "$RUN_ID" ]; then
      echo "‚ùì No CI runs found for branch $BRANCH"
      echo "üí° Make sure you've pushed your branch"
      return 0
    fi

    # Get run status and jobs
    RUN_INFO=$(gh run view "$RUN_ID" --json status,conclusion,jobs 2>/dev/null)
    RUN_STATUS=$(echo "$RUN_INFO" | jq -r '.status')
    RUN_CONCLUSION=$(echo "$RUN_INFO" | jq -r '.conclusion')

    # Display each job
    echo "$RUN_INFO" | jq -r '.jobs[] | "\(.name)\t\(.status)\t\(.conclusion)"' | while IFS=$'\t' read -r name status conclusion; do
      if [ "$status" = "completed" ]; then
        case "$conclusion" in
          "success")
            echo -e "‚úÖ ${GREEN}$name${NC}"
            ;;
          "failure")
            echo -e "‚ùå ${RED}$name${NC}"
            ;;
          "cancelled")
            echo -e "‚õî ${YELLOW}$name${NC} - cancelled"
            ;;
          *)
            echo -e "‚ùì ${YELLOW}$name${NC} - $conclusion"
            ;;
        esac
      else
        echo -e "‚è≥ ${YELLOW}$name${NC} - $status..."
      fi
    done

    # Overall status
    echo ""
    if [ "$RUN_STATUS" = "completed" ]; then
      if [ "$RUN_CONCLUSION" = "success" ]; then
        echo -e "${GREEN}‚úÖ All jobs passed!${NC}"
        echo "üéâ Exiting since all jobs have passed"
        return 2
      else
        echo -e "${RED}‚ùå Workflow $RUN_CONCLUSION${NC}"
        echo ""
        echo "üìã Failure logs:"
        echo "==============="
        gh run view "$RUN_ID" --log-failed
        return 1
      fi
    else
      echo -e "${YELLOW}‚è≥ Workflow still running...${NC}"
      return 0
    fi
  fi

  echo ""
  echo "üõ†Ô∏è  Quick commands:"
  echo "   gh pr view    - View PR details"
  echo "   gh pr checks  - Show detailed check status"
  echo "   gh run list   - List recent runs"
}

# Initial display
show_ci_status
if [ $? -eq 2 ]; then
  # All checks already passed on initial check
  exit 0
fi

# Watch loop
while true; do
  sleep $INTERVAL
  show_ci_status
  case $? in
    2)
      # All checks passed, exit successfully
      exit 0
      ;;
    1)
      # Some checks failed, continue watching
      ;;
    0)
      # Checks still running, continue watching
      ;;
  esac
done
