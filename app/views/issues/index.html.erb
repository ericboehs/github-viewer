<% content_for :title, "#{t('issues.page_title')} - #{@repository.full_name}" %>

<div class="min-h-full bg-gray-50 dark:bg-gray-900">
  <%= render 'shared/navbar' %>

  <div class="py-10">
    <header class="mb-8">
      <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between">
          <h1 class="text-3xl font-bold leading-tight tracking-tight text-gray-900 dark:text-white">
            <%= @repository.full_name %>
          </h1>
          <div>
            <%= button_to refresh_repository_issues_path(@repository), method: :post, params: (params[:q].present? ? { q: params[:q] } : {}), class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" do %>
              <%= t('issues.index.refresh_button') %>
            <% end %>
          </div>
        </div>
      </div>
    </header>

    <main>
      <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <!-- Search and Filter Section -->
        <%= form_with url: repository_issues_path(@repository), method: :get, class: "mb-6" do |f| %>
          <!-- Search Bar -->
          <div class="flex gap-3 mb-4">
            <div class="flex-1 relative">
              <div class="grid grid-cols-1">
                <%= f.text_field :q,
                    value: params[:q],
                    placeholder: "Search issues... (e.g., is:open label:bug)",
                    autocomplete: "off",
                    class: "col-start-1 row-start-1 block w-full rounded-md bg-white px-3 py-1.5 pr-10 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-emerald-600 dark:bg-white/5 dark:text-white dark:placeholder:text-gray-500 dark:outline-white/10 dark:focus:outline-emerald-500 sm:text-sm/6" %>
                <% if params[:q].present? %>
                  <%= link_to repository_issues_path(@repository), class: "col-start-1 row-start-1 mr-3 size-5 self-center justify-self-end text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-400" do %>
                    <svg viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                      <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm-1.72 6.97a.75.75 0 1 0-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 1 0 1.06 1.06L12 13.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L13.06 12l1.72-1.72a.75.75 0 1 0-1.06-1.06L12 10.94l-1.72-1.72Z" clip-rule="evenodd" />
                    </svg>
                  <% end %>
                <% end %>
              </div>
            </div>
            <%= f.submit "Search", class: "inline-flex items-center px-4 py-[0.4375rem] border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500 dark:bg-emerald-600 dark:hover:bg-emerald-700 h-[2.375rem]" %>
          </div>

          <!-- Filters Row -->
          <div class="flex flex-wrap gap-3 items-center">
            <!-- State Filter Buttons -->
            <div class="inline-flex rounded-md shadow-sm" role="group">
              <%
                query_text = params[:q] || ""
                has_state_open = query_text.match?(/\bstate:open\b|\bis:open\b/i)
                has_state_closed = query_text.match?(/\bstate:closed\b|\bis:closed\b/i)
              %>
              <button type="button" data-state="open" class="state-filter-btn px-4 py-2 text-sm font-medium rounded-l-md border <%= has_state_open ? 'bg-blue-600 text-white border-blue-600' : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700' %>">
                Open
              </button>
              <button type="button" data-state="closed" class="state-filter-btn px-4 py-2 text-sm font-medium rounded-r-md border <%= has_state_closed ? 'bg-blue-600 text-white border-blue-600' : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700' %>">
                Closed
              </button>
            </div>

            <!-- Assignee Filter -->
            <% if @available_assignees.any? %>
              <%= render FilterDropdown::BaseComponent.new(qualifier_type: "assignee") do %>
                <%= render FilterDropdown::ButtonComponent.new(text: "Assignees") %>
                <%= render FilterDropdown::MenuComponent.new(title: "Filter by assignees") do %>
                  <%= render FilterDropdown::SearchComponent.new(placeholder: "Filter assignees") %>
                  <div class="py-1 max-h-64 overflow-y-auto" role="none">
                    <%= render FilterDropdown::ItemComponent.new(text: "No assignees", value: "", icon: :user) %>
                    <% @available_assignees.each do |assignee| %>
                      <%= render FilterDropdown::ItemComponent.new(text: assignee, value: assignee) %>
                    <% end %>
                  </div>
                <% end %>
              <% end %>
            <% end %>
          </div>
        <% end %>

        <div class="bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg">
          <div class="px-4 py-5 sm:p-6">
            <%= render 'shared/flash_messages' %>

            <% if @repository.stale? && @repository.cached_at.present? %>
              <div class="mb-4 rounded-md bg-yellow-50 dark:bg-yellow-900/20 p-4">
                <div class="flex">
                  <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                    </svg>
                  </div>
                  <div class="ml-3">
                    <h3 class="text-sm font-medium text-yellow-800 dark:text-yellow-400">
                      Stale Data
                    </h3>
                    <div class="mt-2 text-sm text-yellow-700 dark:text-yellow-300">
                      <p>Issues were last synced <%= time_ago_tag(@repository.cached_at) %>. Click "Refresh Issues" to get the latest data.</p>
                    </div>
                  </div>
                </div>
              </div>
            <% end %>

            <% if @issues.any? %>
              <div class="divide-y divide-gray-200 dark:divide-gray-700">
                <% @issues.each do |issue| %>
                  <%= render IssueCardComponent.new(issue: issue, repository: @repository) %>
                <% end %>
              </div>
            <% else %>
              <div class="text-center py-12">
                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                <h3 class="mt-2 text-sm font-semibold text-gray-900 dark:text-white"><%= t('issues.index.empty.title') %></h3>
                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400"><%= t('issues.index.empty.description') %></p>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>

<script>
  document.addEventListener('turbo:load', function() {
    const searchField = document.querySelector('input[name="q"]');
    const stateButtons = document.querySelectorAll('.state-filter-btn');

    stateButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        const state = this.dataset.state;
        let query = searchField.value || '';

        // Remove existing state qualifiers (both is: and state:)
        query = query.replace(/\b(state|is):(open|closed)\b/gi, '').trim();

        // Add new state qualifier
        query = query ? `state:${state} ${query}` : `state:${state}`;

        searchField.value = query.trim();

        // Submit the form
        const form = this.closest('form');
        if (form.requestSubmit) {
          form.requestSubmit();
        } else {
          form.submit();
        }
      });
    });
  });
</script>
